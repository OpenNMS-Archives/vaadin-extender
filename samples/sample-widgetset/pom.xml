<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<artifactId>samples</artifactId>
		<groupId>org.ops4j.pax.vaadin</groupId>
		<version>0.2.0-SNAPSHOT</version>
	</parent>
	<groupId>org.ops4j.pax.vaadin.samples</groupId>
	<artifactId>sample-widgetset</artifactId>
	<packaging>bundle</packaging>
	<name>Pax for Vaadin Sample Application - Sample Widgetset</name>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<gwt.version>2.4.0</gwt.version>
		<gwt.plugin.version>2.4.0</gwt.plugin.version>
	</properties>

	<build>
		<resources>
			<resource>
				<directory>${project.build.directory}/resources</directory>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
			</resource>
		</resources>

		<plugins>
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<extensions>true</extensions>
				<configuration>
					<instructions>
						<Bundle-RequiredExecutionEnvironment>JavaSE-1.6</Bundle-RequiredExecutionEnvironment>
						<Vaadin-Widgetsets>org.ops4j.pax.vaadin.samples.CombinedWidgetset</Vaadin-Widgetsets>
					</instructions>
				</configuration>
			</plugin>

			<!-- Compiles your custom GWT components with the GWT compiler -->
			<!-- A hosted mode browser for client-side widget debugging can be run
				with the goal gwt:run after uncommenting the correct line below. A remote
				debugger can then be connected to port 8998. Note that e.g. a Jetty server
				should be running with the server side parts - use the goal jetty:run . -->
			<plugin>
                <groupId>com.vaadin</groupId>
                <artifactId>vaadin-maven-plugin</artifactId>
                <version>${vaadin.plugin.version}</version>
                <configuration>
                    <extraJvmArgs>-Xmx512M -Xss1024k</extraJvmArgs>
                    <!-- <runTarget>mobilemail</runTarget> -->
                    <!-- We are doing "inplace" but into subdir VAADIN/widgetsets. This 
                        way compatible with Vaadin eclipse plugin. -->
                    <webappDirectory>${basedir}/src/main/resources/VAADIN/widgetsets
                    </webappDirectory>
                    <hostedWebapp>${basedir}/src/main/resources/VAADIN/widgetsets
                    </hostedWebapp>
                    <noServer>true</noServer>
                    <!-- Remove draftCompile when project is ready -->
                    <draftCompile>false</draftCompile>
                    <compileReport>true</compileReport>
                    <style>OBF</style>
                    <strict>false</strict>
                    <runTarget>http://localhost:8080/</runTarget>
                </configuration>
                <executions>
                    <execution>
                        <configuration>
                            <!-- if you don't specify any modules, the plugin will find them -->
                            <!-- <modules> <module>com.vaadin.demo.mobilemail.gwt.ColorPickerWidgetSet</module> 
                                </modules> -->
                        </configuration>
                        <goals>
                            <goal>resources</goal>
                            <goal>update-widgetset</goal>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
		</plugins>
	</build>

	<repositories>
		<repository>
			<id>vaadin-snapshots</id>
			<url>http://oss.sonatype.org/content/repositories/vaadin-snapshots/</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
			</snapshots>
		</repository>
		<repository>
			<id>vaadin-addons</id>
			<url>http://maven.vaadin.com/vaadin-addons</url>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>codehaus-snapshots</id>
			<url>http://nexus.codehaus.org/snapshots</url>
			<snapshots>
			</snapshots>
			<releases>
				<enabled>false</enabled>
			</releases>
		</pluginRepository>
		<pluginRepository>
			<id>vaadin-snapshots</id>
			<url>http://oss.sonatype.org/content/repositories/vaadin-snapshots/</url>
			<snapshots>
			</snapshots>
			<releases>
				<enabled>false</enabled>
			</releases>
		</pluginRepository>
	</pluginRepositories>

	<dependencies>
		<dependency>
		  <groupId>com.vaadin</groupId>
		  <artifactId>vaadin-server</artifactId>
		  <scope>provided</scope>
		</dependency>
		<dependency>
          <groupId>com.vaadin</groupId>
          <artifactId>vaadin-client</artifactId>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>com.vaadin</groupId>
          <artifactId>vaadin-client-compiled</artifactId>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>com.vaadin</groupId>
          <artifactId>vaadin-themes</artifactId>
          <scope>provided</scope>
        </dependency>
		<dependency>
            <groupId>org.ops4j.pax.vaadin.samples</groupId>
            <artifactId>ColorPicker</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.opennms</groupId>
            <artifactId>project-name</artifactId>
            <version>1.0</version>
        </dependency>
	</dependencies>

</project>
